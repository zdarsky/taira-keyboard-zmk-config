/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define HYPER   4
#define GAME    5

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 * .----------------------------------------------------------------------------------------------------------------------------------.
 * |  `   |   1  |   2  |   3  |   4  |   5  |                                              |   6  |   7  |   8  |   9  |   0  | PScr |
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | ESC  |   Q  |   W  |   E  |   R  |   T  |                                              |   Y  |   U  |   I  |   O  |   P  |  \   |
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | Tab  |   A  |   S  |   D  |   F  |   G  |                                              |   H  |   J  |   K  |   L  |   ;  |  '   |
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   V  |   B  |      | Del  | PGDN  | | PGUP  | Home  |      |   N  |   M  |   ,  |   .  |   /  | Shift|
 * |-------------+------+------+------+------+------+------+-------+-+-------+-------+------+------+------+------+------+------+------|
 * | Ctrl | Alt  | Meta | Alt  |             | Meta | Space| Lower | | Raise | Enter | RAlt |             | LEFT | DOWN | UP   | RIGHT|
 * .----------------------------------------------------------------------------------------------------------------------------------.
 */

            bindings = <
&kp ESC           &kp N1    &kp N2        &kp N3            &kp N4    &kp N5                                                                                               &kp N6  &kp N7  &kp N8     &kp N9         &kp N0  &kp SLASH
&kp TAB           &kp Y     &kp Z         &kp U             &kp A     &kp Q                                                                                                &kp P   &kp B   &kp M      &kp L          &kp F   &kp J
&mo 1             &kp C     &kp S         &kp I             &kp E     &kp O                                                                                                &kp D   &kp T   &kp N      &kp R          &kp H   &kp MINUS
&kp LSHFT         &kp V     &kp X         &kp LEFT_BRACKET  &kp APOS  &kp SEMICOLON         &kp BACKSLASH  &kp BACKSPACE  &kp DELETE      &kp UP_ARROW                     &kp W   &kp G   &kp COMMA  &kp DOT        &kp K   &mt RSHFT ENTER
&kp LEFT_CONTROL  &kp LGUI  &kp LEFT_ALT  &kp SPACE                                  &mo 2  &kp SPACE      &kp ENTER      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW                  &kp LGUI   &kp RIGHT_ALT  &none   &kp RIGHT_CONTROL
            >;
        };

        layer_1 {
            bindings = <
&kp F12  &kp F1           &kp F2            &kp F3               &kp F4                 &kp F5                                                           &kp F6             &kp F7                &kp F8                    &kp F9            &kp F10           &kp F11
&trans   &trans           &kp LS(QUESTION)  &kp RA(NUMBER_8)     &kp RA(NUMBER_9)       &kp GRAVE                                                        &kp EXCLAMATION    &kp NON_US_BACKSLASH  &kp LS(NON_US_BACKSLASH)  &kp LS(NUMBER_0)  &kp LS(NUMBER_6)  &kp RA(Q)
&trans   &kp RA(MINUS)    &kp LS(NUMBER_7)  &kp RA(NUMBER_7)     &kp RA(NUMBER_0)       &kp RIGHT_BRACE                                                  &kp UNDERSCORE     &kp LS(NUMBER_8)      &kp LS(NUMBER_9)          &kp SLASH         &kp LS(PERIOD)    &trans
&trans   &kp NON_US_HASH  &kp LS(NUMBER_4)  &kp RA(NON_US_BSLH)  &kp RA(RIGHT_BRACKET)  &kp LS(EQUAL)            &trans  &trans  &trans  &trans          &kp RIGHT_BRACKET  &kp LS(NUMBER_5)      &kp LS(NUMBER_2)          &kp PIPE          &kp LS(COMMA)     &trans
&trans   &trans           &trans            &trans                                                       &trans  &trans  &trans  &trans  &trans  &trans                                           &trans                    &trans            &trans            &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans      &trans    &trans    &trans     &trans                                                     &trans   &trans  &trans  &trans  &trans     &trans
&trans  &kp PG_UP   &kp BSPC  &kp UP    &kp DEL    &kp PG_DN                                                  &kp ESC  &kp N7  &kp N8  &kp N9  &kp PLUS   &trans
&trans  &kp HOME    &kp LEFT  &kp DOWN  &kp RIGHT  &kp END                                                    &trans   &kp N4  &kp N5  &kp N6  &kp DOT    &trans
&trans  &kp ESCAPE  &kp TAB   &kp INS   &kp RET    &trans             &trans  &trans  &trans  &trans          &trans   &kp N1  &kp N2  &kp N3  &kp COMMA  &trans
&trans  &trans      &trans    &trans                          &trans  &trans  &trans  &trans  &trans  &trans                   &kp N0  &trans  &trans     &trans
            >;
        };
    };
};
